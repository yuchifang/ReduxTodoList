[{"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\index.tsx":"1","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\pages\\TodoList.tsx":"2","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\interFace.ts":"3","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\index.ts":"4","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\reducer.ts":"5","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\actionTypes.ts":"6","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\actionCreateors.ts":"7","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\components\\TodoListUI.tsx":"8","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\sagas.ts":"9","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\InterFace.ts":"10"},{"size":293,"mtime":1610524553984,"results":"11","hashOfConfig":"12"},{"size":1777,"mtime":1610524457990,"results":"13","hashOfConfig":"12"},{"size":81,"mtime":1610247212922,"results":"14","hashOfConfig":"12"},{"size":433,"mtime":1610523992757,"results":"15","hashOfConfig":"12"},{"size":1061,"mtime":1610368231949,"results":"16","hashOfConfig":"12"},{"size":205,"mtime":1610523702736,"results":"17","hashOfConfig":"12"},{"size":568,"mtime":1610523702702,"results":"18","hashOfConfig":"12"},{"size":1329,"mtime":1610524116344,"results":"19","hashOfConfig":"12"},{"size":659,"mtime":1610523971398,"results":"20","hashOfConfig":"12"},{"size":372,"mtime":1610340433082,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"180x5r2",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\index.tsx",[],["46","47"],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\pages\\TodoList.tsx",["48","49","50"],"import React, { useState, useEffect } from 'react'\r\nimport \"antd/dist/antd.css\"\r\nimport { TodoListStoreType } from \"../InterFace\"\r\nimport { changeInputAction, addListAction, deleteListAction, geyMyListAction } from \"../store/actionCreateors\"\r\n//寫完自己整理一下 慢慢看一下整體的架構\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { TodoListUI } from \"../components/TodoListUI\"\r\n\r\nexport const TodoList: React.FC = ({ }) => {\r\n    const listState = useSelector((state: TodoListStoreType) => state)\r\n    const dispatch = useDispatch()\r\n    // const [listState, setListState] = useState<TodoListStoreType>(store.getState())\r\n\r\n    useEffect(() => {\r\n\r\n        const action: any = geyMyListAction()\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n\r\n    //     const storeChange = () => {\r\n    //         setListState(store.getState())\r\n    //     }\r\n    //     store.subscribe(storeChange)\r\n    //     //subscribe功用 如果 redux 變化了調用方法 \r\n    // }, [store])\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const action = changeInputAction(e.target.value)\r\n        dispatch(action)\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        if (listState.inputValue !== \"\") {\r\n\r\n            const action = addListAction(listState.inputValue)\r\n            dispatch(action)\r\n        } else {\r\n            alert(\"請輸入字串\")\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id: number) => {\r\n        const action = deleteListAction(id)\r\n        dispatch(action)\r\n    }\r\n    return (\r\n        <TodoListUI\r\n            handleInputChange={handleInputChange}\r\n            listState={listState}\r\n            handleDelete={handleDelete}\r\n            handleAdd={handleAdd} />\r\n    );\r\n}","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\interFace.ts",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\index.ts",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\reducer.ts",["51"],"import { CHANGE_INPUT, ADD_LIST, DELETE_LIST, GET_INIT_LIST } from \"./actionTypes\"\r\nimport { TodoListStoreType, ActionType } from \"../InterFace\"\r\n\r\nconst defaultState: TodoListStoreType = {\r\n    inputValue: \"Write Something\",\r\n    list: [\"早餐\", \"運動\", \"午餐\", \"運動\", \"晚餐\"]\r\n}\r\n\r\nexport default (state = defaultState, action: ActionType) => {\r\n    let newState = JSON.parse(JSON.stringify(state))\r\n    switch (action.type) { //Reducer只能接收state\r\n        case CHANGE_INPUT:\r\n            newState.inputValue = action.value\r\n            return newState\r\n        case ADD_LIST:\r\n            newState.list = [...newState.list, action.value]\r\n            newState.inputValue = \"\"\r\n            return newState\r\n        case DELETE_LIST:\r\n            const filterState = newState.list.filter((list: string, index: number) => index !== action.value);\r\n            newState.list = filterState\r\n            return newState\r\n        case GET_INIT_LIST:\r\n            newState.list = action.value;\r\n            return newState\r\n    }\r\n    return state\r\n}","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\actionTypes.ts",[],["52","53"],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\actionCreateors.ts",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\components\\TodoListUI.tsx",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\sagas.ts",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\InterFace.ts",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":9,"column":36,"nodeType":"64","messageId":"65","endLine":9,"endColumn":39},{"ruleId":"66","severity":1,"message":"67","line":18,"column":8,"nodeType":"68","endLine":18,"endColumn":10,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":9,"column":1,"nodeType":"72","endLine":28,"endColumn":2},{"ruleId":"54","replacedBy":"73"},{"ruleId":"56","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["77"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["75"],["76"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [dispatch]",{"range":"80","text":"81"},[728,730],"[dispatch]"]