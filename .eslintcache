[{"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\index.tsx":"1","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\pages\\TodoList.tsx":"2","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\interFace.ts":"3","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\index.ts":"4","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\reducer.ts":"5","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\actionTypes.ts":"6","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\actionCreateors.ts":"7","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\components\\TodoListUI.tsx":"8","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\sagas.js":"9"},{"size":177,"mtime":1610181247772,"results":"10","hashOfConfig":"11"},{"size":1560,"mtime":1610432166595,"results":"12","hashOfConfig":"11"},{"size":81,"mtime":1610247212922,"results":"13","hashOfConfig":"11"},{"size":433,"mtime":1610430511011,"results":"14","hashOfConfig":"11"},{"size":1061,"mtime":1610368231949,"results":"15","hashOfConfig":"11"},{"size":205,"mtime":1610424843833,"results":"16","hashOfConfig":"11"},{"size":568,"mtime":1610424844377,"results":"17","hashOfConfig":"11"},{"size":1329,"mtime":1610342668209,"results":"18","hashOfConfig":"11"},{"size":659,"mtime":1610432830043,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"180x5r2",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\index.tsx",[],["41","42"],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\pages\\TodoList.tsx",["43","44","45"],"import React, { useState, useEffect } from 'react'\r\nimport \"antd/dist/antd.css\"\r\nimport store from \"../store/index\";\r\nimport { TodoListStoreType } from \"../InterFace\"\r\nimport { changeInputAction, addListAction, deleteListAction, geyMyListAction } from \"../store/actionCreateors\"\r\nimport axios from \"axios\"\r\n\r\n//寫完自己整理一下 慢慢看一下整體的架構\r\n\r\nimport { TodoListUI } from \"../components/TodoListUI\"\r\n\r\nexport const TodoList: React.FC = ({ }) => {\r\n    const [listState, setListState] = useState<TodoListStoreType>(store.getState())\r\n\r\n    useEffect(() => {\r\n\r\n        const action: any = geyMyListAction()\r\n        store.dispatch(action)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        const storeChange = () => {\r\n            setListState(store.getState())\r\n        }\r\n        store.subscribe(storeChange)\r\n        //subscribe功用 如果 redux 變化了調用方法 \r\n    }, [store])\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const action = changeInputAction(e.target.value)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        const action = addListAction(listState.inputValue)\r\n        store.dispatch(action)\r\n    }\r\n\r\n    const handleDelete = (id: number) => {\r\n        const action = deleteListAction(id)\r\n        store.dispatch(action)\r\n    }\r\n    return (\r\n        <TodoListUI\r\n            handleInputChange={handleInputChange}\r\n            listState={listState}\r\n            handleDelete={handleDelete}\r\n            handleAdd={handleAdd} />\r\n    );\r\n}","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\interFace.ts",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\index.ts",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\reducer.ts",["46"],"import { CHANGE_INPUT, ADD_LIST, DELETE_LIST, GET_INIT_LIST } from \"./actionTypes\"\r\nimport { TodoListStoreType, ActionType } from \"../InterFace\"\r\n\r\nconst defaultState: TodoListStoreType = {\r\n    inputValue: \"Write Something\",\r\n    list: [\"早餐\", \"運動\", \"午餐\", \"運動\", \"晚餐\"]\r\n}\r\n\r\nexport default (state = defaultState, action: ActionType) => {\r\n    let newState = JSON.parse(JSON.stringify(state))\r\n    switch (action.type) { //Reducer只能接收state\r\n        case CHANGE_INPUT:\r\n            newState.inputValue = action.value\r\n            return newState\r\n        case ADD_LIST:\r\n            newState.list = [...newState.list, action.value]\r\n            newState.inputValue = \"\"\r\n            return newState\r\n        case DELETE_LIST:\r\n            const filterState = newState.list.filter((list: string, index: number) => index !== action.value);\r\n            newState.list = filterState\r\n            return newState\r\n        case GET_INIT_LIST:\r\n            newState.list = action.value;\r\n            return newState\r\n    }\r\n    return state\r\n}","D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\actionTypes.ts",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\actionCreateors.ts",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\components\\TodoListUI.tsx",[],"D:\\work\\Font-end\\ReduxDemo\\ReduxTodoListFat\\src\\store\\sagas.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":13},{"ruleId":"55","severity":1,"message":"56","line":12,"column":36,"nodeType":"57","messageId":"58","endLine":12,"endColumn":39},{"ruleId":"59","severity":1,"message":"60","line":28,"column":8,"nodeType":"61","endLine":28,"endColumn":15,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":9,"column":1,"nodeType":"65","endLine":28,"endColumn":2},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'store'. Either exclude it or remove the dependency array. Outer scope values like 'store' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["68"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: []",{"range":"71","text":"72"},[845,852],"[]"]